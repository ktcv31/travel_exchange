{"ast":null,"code":"var _jsxFileName = \"/Users/tatianacarvajal/Documents/bootcamp/travel_exchange/frontend/src/components/Shared/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapSearch = () => {\n  _s();\n  const [location, setLocation] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n  useEffect(() => {\n    // Initialize the map\n    const googleMap = new window.google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 0,\n        lng: 0\n      },\n      // Default center\n      zoom: 2 // Default zoom level\n    });\n    setMap(googleMap);\n  }, []);\n  const handleSearch = async () => {\n    // Fetch weather data from backend\n    try {\n      const response = await axios.get(`/api/weather/${location}`);\n      setWeather(response.data);\n\n      // Geocode the location to get latitude and longitude\n      const geocoder = new window.google.maps.Geocoder();\n      geocoder.geocode({\n        address: location\n      }, (results, status) => {\n        if (status === 'OK' && results[0]) {\n          const {\n            lat,\n            lng\n          } = results[0].geometry.location;\n          map.setCenter({\n            lat: lat(),\n            lng: lng()\n          });\n          map.setZoom(10);\n\n          // Place or update the marker\n          if (marker) {\n            marker.setPosition({\n              lat: lat(),\n              lng: lng()\n            });\n          } else {\n            const newMarker = new window.google.maps.Marker({\n              position: {\n                lat: lat(),\n                lng: lng()\n              },\n              map: map\n            });\n            setMarker(newMarker);\n          }\n        } else {\n          alert('Geocode was not successful for the following reason: ' + status);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      placeholder: \"Enter city or country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100%',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weather Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Conditions: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(MapSearch, \"/e5fvJP7vj+kLMg3t4ummxgMa90=\");\n_c = MapSearch;\nexport default MapSearch;\nvar _c;\n$RefreshReg$(_c, \"MapSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MapSearch","_s","location","setLocation","weather","setWeather","map","setMap","marker","setMarker","googleMap","window","google","maps","Map","document","getElementById","center","lat","lng","zoom","handleSearch","response","get","data","geocoder","Geocoder","geocode","address","results","status","geometry","setCenter","setZoom","setPosition","newMarker","Marker","position","alert","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","style","width","height","main","temp","description","_c","$RefreshReg$"],"sources":["/Users/tatianacarvajal/Documents/bootcamp/travel_exchange/frontend/src/components/Shared/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst MapSearch = () => {\n    const [location, setLocation] = useState('');\n    const [weather, setWeather] = useState(null);\n    const [map, setMap] = useState(null);\n    const [marker, setMarker] = useState(null);\n\n    useEffect(() => {\n        // Initialize the map\n        const googleMap = new window.google.maps.Map(document.getElementById('map'), {\n            center: { lat: 0, lng: 0 }, // Default center\n            zoom: 2, // Default zoom level\n        });\n        setMap(googleMap);\n    }, []);\n\n    const handleSearch = async () => {\n        // Fetch weather data from backend\n        try {\n            const response = await axios.get(`/api/weather/${location}`);\n            setWeather(response.data);\n\n            // Geocode the location to get latitude and longitude\n            const geocoder = new window.google.maps.Geocoder();\n            geocoder.geocode({ address: location }, (results, status) => {\n                if (status === 'OK' && results[0]) {\n                    const { lat, lng } = results[0].geometry.location;\n                    map.setCenter({ lat: lat(), lng: lng() });\n                    map.setZoom(10);\n\n                    // Place or update the marker\n                    if (marker) {\n                        marker.setPosition({ lat: lat(), lng: lng() });\n                    } else {\n                        const newMarker = new window.google.maps.Marker({\n                            position: { lat: lat(), lng: lng() },\n                            map: map,\n                        });\n                        setMarker(newMarker);\n                    }\n                } else {\n                    alert('Geocode was not successful for the following reason: ' + status);\n                }\n            });\n        } catch (error) {\n            console.error(\"Error fetching weather data:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n                placeholder=\"Enter city or country\"\n            />\n            <button onClick={handleSearch}>Search</button>\n            \n            <div id=\"map\" style={{ width: '100%', height: '400px' }}></div>\n            \n            {weather && (\n                <div>\n                    <h3>Weather Information</h3>\n                    <p>Temperature: {weather.main.temp}</p>\n                    <p>Conditions: {weather.weather[0].description}</p>\n                    {/* Add more weather details as needed */}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MapSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}